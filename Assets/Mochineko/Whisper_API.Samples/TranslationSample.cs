#nullable enable
using System;
using Cysharp.Threading.Tasks;
using UnityEngine;
using UnityEngine.Assertions;

namespace Mochineko.Whisper_API.Samples
{
    /// <summary>
    /// A sample component to translate speech into English text by Whisper transcription API on Unity.
    /// </summary>
    public sealed class TranslationSample : MonoBehaviour
    {
        /// <summary>
        /// API key generated by OpenAPI.
        /// </summary>
        [SerializeField] private string apiKey = string.Empty;

        /// <summary>
        /// File path of speech audio.
        /// </summary>
        [SerializeField] private string filePath = string.Empty;

        private TranslationAPI? connection;

        private void Start()
        {
            // API Key must be set.
            Assert.IsNotNull(apiKey);

            // Create instance of WhisperTranscriptionConnection.
            connection = new TranslationAPI(apiKey);
            
            // If you want to specify response format, etc..., please use other initialization:
            // connection = new WhisperTranslationConnection(apiKey, new APIRequestBody(
            //     file: "",
            //     model: "whisper-1",
            //     prompt: "Some prompts",
            //     responseFormat: "json",
            //     temperature: 1f));
        }

        [ContextMenu(nameof(Translate))]
        public async void Translate()
        {
            // Validations
            if (connection == null)
            {
                Debug.LogError($"[Whisper_API.Translation.Samples] Connection is null.");
                return;
            }

            if (string.IsNullOrEmpty(filePath))
            {
                Debug.LogError($"[Whisper_API.Translation.Samples] File path is null or empty.");
                return;
            }

            string result;
            try
            {
                // Translate speech into English text by Whisper translation API.
                result = await connection
                    .TranslateFromFileAsync(filePath, this.GetCancellationTokenOnDestroy());
            }
            catch (Exception e)
            {
                // Exceptions should be caught.
                Debug.LogException(e);
                return;
            }

            // Default text response format is JSON.
            var text = TranslationResponseBody.FromJson(result)?.Text;

            // Log text result.
            Debug.Log($"[Whisper_API.Translation.Samples] Result:\n{text}");
        }
    }
}